node {
  /*parameters {
    Credentials (name: 'Subscription_ID')
    Credentials (name: 'Client_ID')
    Credentials (name: 'Client_Secret')
    Credentials (name: 'Tenant_ID')
  }*/
  /*environment{
    subscription_id = "${params.Subscription_ID}"
    client_id = "${params.Client_ID}"
    tenant_id = "${params.Tenant_ID}"
    client_secret = "${params.Client_Secret}"
}*/
  stage('SCM Checkout & cloning'){
    git url:  'https://github.com/gunjannn/c-i.git',branch: 'master'
}

  stage('Setterraformpath') {
    def tfHome = tool name: 'terraform'
      env.PATH = "${tfHome}:${env.PATH}"
 
      sh 'terraform version'
 }
           
      
  stage('TerraformApply') {
    withCredentials([azureServicePrincipal('az'), variable: 'Client_ID', variable: 'Client_Secret', variable: 'Subscription_ID', variable: 'Tenant_ID']) {
    sh "terraform init -input=false"
    sh "terraform validate"
    sh "terraform plan -out=tfplan -input=false subscription_id=${params.Subscription_ID} C"
    sh "terraform apply -input=false tfplan"
      }
    }	
  /*stage('InfraTesting') {
    withCredentials([azureServicePrincipal('az')]) {
      sh "inspec exec AKS -t azure://64b70538-bc40-4492-9c4b-13f8b43e732d"
}
}	*/







/*node {
  stage('SCM Checkout & cloning'){
    git url:  'https://github.com/gunjannn/c-i.git',branch: 'master'
}

  stage('Setterraformpath') {
    script {
      def tfHome = tool name: 'terraform'
      env.PATH = "${tfHome}:${env.PATH}"
 }
      sh 'terraform version'
 }
            
      
  stage('TerraformApply') {

    sh "terraform init"
}
   
   stage('TerraformPlan') { 
      sh "terraform plan -out=tfplan -input=false"
}*/
      
 /* stage('changing dir') {
    dir ('c-i') {
    sh 'pwd'
}
}

  stage('TerraformApply') {
    sh "terraform apply -input=false tfplan"
}

  stage('InfraTesting') {
  withCredentials([azureServicePrincipal('az')]) {
   
    sh "inspec exec AKS -t azure://64b70538-bc40-4492-9c4b-13f8b43e732d"
}
	
}
}*/
